# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: last-fm-collector
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '2'

useDotenv: true

provider:
  name: aws
  runtime: python3.8
  stage: ${env:STAGE, opt:stage, 'develop'}
  
  environment:
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}
    LAST_FM_API_KEY: ${env:LAST_FM_API_KEY}
    STAGE: ${env:STAGE}
  
  iamRoleStatements:
    - Effect: "Allow"
      Action:
       - dynamodb:Query
       - dynamodb:Scan
       - dynamodb:GetItem
       - dynamodb:PutItem
       - dynamodb:UpdateItem
       - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:us-east-1:552539571318:table/last-fm-collector-develop"

package:
  exclude:
    - .git/**
    - README.md

functions:
  # getFriends:
  #   handler: users/handler.friends
  #   events:
  #     - http: 
  #         path: users/{userId}/friends
  #         method: GET
          
  # getUserInfo:
  #   handler: users/handler.info
  #   events:
  #     - http: 
  #         path: users/{userId}
  #         method: GET
          
  populateDatabase:
    handler: users/handler.populate
    events:
      - schedule:
          description: 'Every weekday at 3:00 AM'
          rate: cron(0 6 ? * MON-FRI *)   
      - http: 
          path: users/populate
          method: POST
        
resources:
 Resources:
   usersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: ${self:provider.environment.DYNAMODB_TABLE}
      AttributeDefinitions:
        - AttributeName: user_id
          AttributeType: S
        - AttributeName: track_playback_date
          AttributeType: S
        - AttributeName: created_at
          AttributeType: S
      KeySchema:
        - AttributeName: user_id
          KeyType: HASH
        - AttributeName: track_playback_date
          KeyType: RANGE
      LocalSecondaryIndexes:
        - IndexName: creation_date
          KeySchema:
          - AttributeName: user_id
            KeyType: HASH
          - AttributeName: created_at
            KeyType: RANGE
          Projection:
            NonKeyAttributes:
            - track_playback_date
            ProjectionType: INCLUDE
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      

plugins:
    - serverless-offline
